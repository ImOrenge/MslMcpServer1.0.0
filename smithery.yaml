apiVersion: smithery.ai/v1
kind: MCPServer
metadata:
  name: msl-mcp-server
  version: "1.0.0"
  description: "MSL (Macro Scripting Language) MCP Server with OpenAI Integration"
  author: "ImOrenge"
  license: "MIT"
  repository: "https://github.com/ImOrenge/MslMcpServer1.0.0"
  tags:
    - macro
    - scripting
    - gaming
    - automation
    - msl
    - openai
    - ai-powered

spec:
  # 서버 실행 설정
  command: ["python", "server.py"]
  
  # 환경변수 설정
  env:
    OPENAI_API_KEY:
      description: "OpenAI API key for AI-powered MSL generation"
      required: true
      secret: true
    MSL_OPENAI_MODEL:
      description: "OpenAI model to use"
      default: "gpt-4o"
    MSL_DEBUG:
      description: "Enable debug mode"
      default: "false"

  # MCP 도구들
  tools:
    - name: "parse_msl"
      description: "Parse and analyze MSL scripts with syntax validation and AST generation"
      
    - name: "generate_msl" 
      description: "Generate MSL scripts from natural language using OpenAI GPT-4o"
      
    - name: "validate_msl"
      description: "Validate MSL scripts for syntax errors, performance issues, and safety"
      
    - name: "optimize_msl"
      description: "Optimize MSL scripts for better performance using AI analysis"
      
    - name: "explain_msl"
      description: "Generate educational explanations for MSL scripts for beginners"
      
    - name: "msl_examples"
      description: "Provide categorized MSL script examples by game type and complexity"

  # 지원되는 파일 형식
  fileTypes:
    - ".msl"
    - ".txt"

  # 프로젝트 정보
  homepage: "https://github.com/ImOrenge/MslMcpServer1.0.0"
  documentation: "https://github.com/ImOrenge/MslMcpServer1.0.0/wiki"
  issues: "https://github.com/ImOrenge/MslMcpServer1.0.0/issues"
  
  # 런타임 요구사항
  runtime:
    python: ">=3.11"
    
  # 예제 사용법
  examples:
    - title: "Generate Game Macro"
      description: "Create a combat macro for FPS games"
      code: |
        {
          "tool": "generate_msl",
          "arguments": {
            "prompt": "Create a macro that presses Q then waits 500ms then presses W",
            "game_context": "FPS",
            "complexity": "simple"
          }
        }
        
    - title: "Optimize Script"
      description: "Optimize an existing MSL script"
      code: |
        {
          "tool": "optimize_msl", 
          "arguments": {
            "script": "Q,(500),W,(500),E",
            "level": "standard",
            "target": "performance"
          }
        }
        
    - title: "Explain Script"
      description: "Get educational explanation of MSL syntax"
      code: |
        {
          "tool": "explain_msl",
          "arguments": {
            "script": "Q+Shift,(100),W*3",
            "audience": "beginner",
            "include_tips": true
          }
        }

  # 지원되는 언어
  languages:
    - name: "MSL"
      description: "Macro Scripting Language for gaming automation"
      extensions: [".msl"]
      syntax_highlighting: true

  # 사용 케이스
  useCases:
    - title: "Game Macro Creation"
      description: "Create complex gaming macros with natural language"
      example: "generate_msl(prompt='Attack combo with Q->W->E keys')"
      
    - title: "Script Optimization"
      description: "Optimize existing MSL scripts for better performance"
      example: "optimize_msl(script='Q,W,E', level='aggressive')"
      
    - title: "Learning MSL"
      description: "Learn MSL syntax through examples and explanations"
      example: "msl_examples(category='combat', game='fps')"

  # 설정 파일
  config:
    - name: "settings.py"
      path: "config/settings.py"
      description: "Main configuration settings"
      
    - name: "requirements.txt"
      path: "requirements.txt"
      description: "Python dependencies"

  # 문서화
  documentation:
    readme: "README.md"
    examples: "examples/"
    api_docs: true
    
  # 지원 및 연락처
  support:
    issues: "https://github.com/your-repo/msl-mcp-server/issues"
    documentation: "https://github.com/your-repo/msl-mcp-server/wiki"
    
  # 라이선스 및 법적 정보
  legal:
    license: "MIT"
    privacy_policy: "This server processes MSL scripts locally and may send prompts to OpenAI for AI generation features."
    
  # 성능 및 제한사항
  limits:
    max_script_length: 10000
    max_concurrent_requests: 10
    request_timeout: 60
    
  # 의존성
  dependencies:
    mcp: ">=1.0.0"
    openai: ">=1.50.0"
    python: ">=3.11" 